{
  "name": "My workflow 4",
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "= AI Agent Instruction \nYou are an assistant that helps manage emails via an MCP HTTP API.\nThe current date and time is:{{$now}}.\n\nTo perform email actions, use the following API:**\n\nEndpoint: POST http://127.0.0.1:8000/ask\n\n\nContent-Type: application/json\n\nRequest Body:\n\njson\n{\n  \"tool\": \"<tool_name>\",\n  \"args\": { ... }\n}\nWhere <tool_name> is one of:\n list_folders,\n    list_recent_emails\n    search_emails\n    get_email_by_number\n    reply_to_email_by_number\n    create_draft_reply_by_number\n    Compose and send a new email\n    mark_email_as_read\n\nExamples:\n\n// List available folders\n{\n  \"tool\": \"list_folders\",\n  \"args\": {}\n}\n\n// List recent emails from the last N days (e.g., 3 days)\n{\n  \"tool\": \"list_recent_emails\",\n  \"args\": { \"days\": 3 }\n}\n\n// Search for emails containing a specific term within the last N days (e.g., \"invoice\", 7 days)\n{\n  \"tool\": \"search_emails\",\n  \"args\": { \"search_term\": \"invoice\", \"days\": 7 }\n}\n\n// Get full details of an email by its number from the last listing (e.g., email #2)\n{\n  \"tool\": \"get_email_by_number\",\n  \"args\": { \"email_number\": 2 }\n}\n\n// Reply to an email by its number with a reply text (e.g., reply to email #1)\n{\n  \"tool\": \"reply_to_email_by_number\",\n  \"args\": { \"email_number\": 1, \"reply_text\": \"Thank you for your message.\" }\n}\n\n// Create a draft reply for an email by its number (e.g., draft reply for email #1)\n{\n  \"tool\": \"create_draft_reply_by_number\",\n  \"args\": { \"email_number\": 1,reply_text:'Dear ahmed pls find the report' }\n}\n\n\n// Compose and send a new email\n{\n  \"tool\": \"Compose and send a new email\",\n  \"args\": {\n    \"to\": \"recipient@example.com\",\n    \"subject\": \"Subject text\",\n    \"body\": \"Body text of the email\"\n  }\n}\n\n// Mark an email as read by its number (e.g., mark email #3 as read)\n{\n  \"tool\": \"mark_email_as_read\",\n  \"args\": { \"email_number\": 3 }\n}\nAlways send requests to the API in this format and use the tool best suited to the user's request.\nYou can chain tools: for example, list emails, then get details, then reply.\nIf you need to see available folders, use list_folders."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        40,
        80
      ],
      "id": "b595e798-a182-4f25-9a53-c149bc0ab10b",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -220,
        -20
      ],
      "id": "2cf29f47-92ec-46cf-9e2e-60d52a4ccca2",
      "name": "When chat message received",
      "webhookId": "df64f99c-0532-4122-9469-751b0f574b0b"
    },
    {
      "parameters": {
        "sseEndpoint": "http://127.0.0.1:5678/mcp/819696a6-cc54-4211-9033-37bc0f45fa94/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        380,
        340
      ],
      "id": "025a19ba-bfa9-40bd-8e61-0ce82cc339e9",
      "name": "MCP Client",
      "disabled": true
    },
    {
      "parameters": {
        "path": "819696a6-cc54-4211-9033-37bc0f45fa94"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -820,
        20
      ],
      "id": "50904e11-1ea6-4ee3-b5a6-f2809104b81e",
      "name": "MCP Server Trigger",
      "webhookId": "819696a6-cc54-4211-9033-37bc0f45fa94"
    },
    {
      "parameters": {
        "path": "Test",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -240,
        -160
      ],
      "id": "760c254b-2ae5-413e-9246-d6cc187994c5",
      "name": "Webhook",
      "webhookId": "16506b3c-7853-4ca6-a838-80a0b712a20d"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  return {\n    json: {\n      chatInput: item.json.body?.message || \"greeting\"\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        100,
        -120
      ],
      "id": "13a8d9b6-b840-42bb-a192-e17b260e87b4",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        180,
        340
      ],
      "id": "547699db-1be1-45c9-92a6-e426a0799bf5",
      "name": "GetEmailes"
    },
    {
      "parameters": {
        "contextWindowLength": 2000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -20,
        340
      ],
      "id": "b6234ba5-bfac-4d6a-ae7b-346b8deee0ff",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -480,
        180
      ],
      "id": "c9321f72-65f0-4183-9b4d-0b85b91d9ea0",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "function generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nreturn $input.all().map(item => {\n\n  const sessionId = generateUUID();\n\n  const chatInput = `\ncheck if there is received email in the unread status ( i mean by that the email has been opened yet or not seen yet )from the inbox folder.for last 2 days \nPlease do the following:\n1. Analyze if this email needs a reply.\n2. If yes, write a professional and appropriate reply.\n3. Do not send anything .  you Just return the reply as a draft email that I can review later. using the tool (create_draft_reply_by_numbe)\n4- and mark the email readed using the tool ( mark_email_as_read)\nIf the email does not need a reply, respond with \"No reply needed.\"\n`;\n\n  return {\n    json: {\n      sessionId,\n      chatInput\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -260,
        180
      ],
      "id": "c4e4ed32-2f12-4653-9fe5-d67e5835c69f",
      "name": "Code1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -180,
        380
      ],
      "id": "93eb1923-5753-4e53-a8c1-4114288c9f77",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "zFylIjARpTBtJ6fp",
          "name": "DeepSeek account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -680,
        420
      ],
      "id": "4e2d765d-0b1d-41a0-899a-4bbd38d3bc3b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "fym4P78T7TGCyHrG",
          "name": "OpenAi account 2"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -340,
        380
      ],
      "id": "1d6e139e-f7e0-4bab-bae2-5ad9fc82d7d5",
      "name": "DeepSeek Chat Model1",
      "credentials": {
        "deepSeekApi": {
          "id": "zFylIjARpTBtJ6fp",
          "name": "DeepSeek account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetEmailes": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "DeepSeek Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "437a5127-a96e-487b-8f3e-0da19d14856c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d07e7253b9fc5efbc148b4bef7353d8894b7d2f24d7dab96b1b513171c9840f1"
  },
  "id": "np9vgNhSivtcdfd1",
  "tags": []
}